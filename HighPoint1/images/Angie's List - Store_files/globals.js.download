define(function (require) {
  /* eslint no-var:0 */
  var Backbone = require('backbone');
  var ALModel = require('al/al_model');

  var protectedGlobals = {
    currentAddress: new ALModel(),
    primaryAddress: new ALModel()
  };

  var option = function (value, _default) {
    return (typeof value === 'undefined') ? _default : value;
  };

  var notDefined = function (attr) {
    throw new Error(
      'global `' + attr + '` is not defined. Please define all globals with a ' +
      'default value in modules/presentation/app/assets/v2/common/al/globals.js'
    );
  };

  var GlobalModel = Backbone.Model.extend({
    get: function (attr) {
      if (!(attr in protectedGlobals)) {
        return notDefined(attr);
      }
      return option(
        Backbone.Model.prototype.get.call(this, attr),
        protectedGlobals[attr]
      );
    },

    set: function (attr, value) {
      /* eslint no-restricted-syntax: 0 */
      if (typeof attr === 'object') {
        for (var key in attr) {
          if (attr.hasOwnProperty(key)) {
            this.set(key, attr[key]);
          }
        }
      } else {
        if (!(attr in protectedGlobals)) {
          return notDefined(attr);
        }
        return Backbone.Model.prototype.set.call(this, attr, value);
      }
      return undefined;
    },

    reset: function () {
      this.set(protectedGlobals);
    }

  });

  return new GlobalModel();
});
