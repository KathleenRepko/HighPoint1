define(function (require) {
  var AL = require('al');
  var UserAddress = require('models/UserAddress');
  var ShoppingCart = require('models/ShoppingCart');
  var Backbone = require('backbone');
  var _ = require('underscore');

  var Model = AL.Model.extend({
    url: AL.memApiPath + '/users/current',

    constructor: function () {
      var userObj = _.isObject(arguments[0]) ? arguments[0] : {};
      this.userAddresses = new UserAddress.Collection(userObj.userAddresses || {});
      this.shoppingCart = new ShoppingCart.Collection(userObj.shoppingCart || {});
      Backbone.Model.apply(this, arguments);
    },

    parse: function (data, options) {
      var _links = data._links;
      var _embedded = data._embedded;

      if (_links && _links.self && _links.self.href) {
        this.url = _links.self.href;
      }

      if (_embedded && _embedded.userAddresses) {
        var _addresses = _embedded.userAddresses;
        var addresses = new UserAddress.Collection(_addresses, {parse: true});
        this.userAddresses = addresses;
      }

      if (_embedded && _embedded.shoppingCart) {
        var _shoppingCart = _embedded.shoppingCart;
        var cart = new ShoppingCart.Collection(_shoppingCart, {parse: true});
        this.shoppingCart = cart;
      }

      delete data._embedded;

      return data;
    },

    isAuthorized: function () {
      return (this.has('userId') || this.has('id'));
    },

    // Allow backbone whose attributes are sometimes other backbone models JSONify it
    // https://github.com/jashkenas/backbone/issues/483
    /* eslint no-unused-expressions:0 */

    toJSON: function () {
      if (this._isSerializing) {
        return this.id || this.cid;
      }
      this._isSerializing = true;
      var json = _.assign(
        {},
        _.clone(this.attributes),
        {userAddresses: this.userAddresses, shoppingCart: this.shoppingCart}  // important line
      );
      _.each(json, function (value, name) {
        _.isFunction((value || '').toJSON) && (json[name] = value.toJSON());
      });
      this._isSerializing = false;
      return json;
    }
  });

  return {
    Model: Model
  };
});
